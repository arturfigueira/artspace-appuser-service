## HTTP configuration
quarkus.http.port=8091

## Database Settings
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=appuser
%prod.quarkus.datasource.password=Tq6y24Lt4NuAa4Fr
%prod.quarkus.datasource.reactive.url=postgresql://appuserdb:5432/postgres
%prod.quarkus.datasource.reactive.max-size=20

## Drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script=dev-import.sql




## Fault tolerance settings
Timeout/enabled=false
CircuitBreaker/enabled=false

%prod.Timeout/enabled=true
%prod.Timeout/value=300
%prod.CircuitBreaker/enabled=true


## Logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
%prod.quarkus.log.console.level=INFO
quarkus.log.console.darken=1


## Kafka Configuration
%prod.kafka.bootstrap.servers=core-kafka:29092,core-kafka:39092
mp.messaging.outgoing.appusers-out.connector=smallrye-kafka
mp.messaging.outgoing.appusers-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.appusers-out.topic=identity.cdc.appusers.0
mp.messaging.outgoing.appusers-out.retries=10


## Outgoing Events Configuration
outgoing.ev.correlation.key=correlationId
outgoing.ev.fallback.enabled=true
outgoing.ev.fallback.job.frequency=0 15 0 ? * * *
outgoing.ev.fallback.job.items.per-run=100

